version: "3"
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.0
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    build: kafka/
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      #- 9092:9092
      - 29092:29092
      - 8079:8079
    environment:
      KAFKA_OPTS: "-javaagent:/jmx-reporter/jmx_prometheus_javaagent.jar=0.0.0.0:8079:/etc/prometheus-config/kafka.yml"

  influxdb:
    image: influxdb:1.3.7
    ports:
      - "8086:8086"

  grafana:
    image: grafana/grafana:4.6.1
    ports:
      - "3000:3000"
    environment:
      GF_INSTALL_PLUGINS: jdbranham-diagram-panel
    depends_on:
      - influxdb
  grafana-setup:
    build: grafana-setup/
    depends_on:
      - grafana
  slow-kafka-consumer:
    image: framiere/slow-kafka-consumer
    restart: on-failure
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      TOPIC: telegraf
      GROUP_ID: slow-consumer
    depends_on:
      - kafka

  kafka-producer:
    image: purbon/kafka-clients:latest
    container_name: kafka-producer
    ports:
     - 8078:8078
    environment:
       KAFKA_SERVERS: "kafka:9092"
       CLIENT_MODE: "producer"
    depends_on:
     - kafka

  kafka-consumer:
    image: purbon/kafka-clients:latest
    container_name: kafka-consumer
    ports:
     - 8077:8077
    environment:
     KAFKA_SERVERS: "kafka:9092"
     CLIENT_MODE: "consumer"
    depends_on:
     - kafka

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
    - 9090:9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
    - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro

  telegraf:
    image: telegraf:1.4.3
    restart: on-failure
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - ./telegraf/telegraf-with-kafka-output.conf:/etc/telegraf/telegraf.conf:ro
    links:
      - influxdb
      - kafka
